/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import GraphPackage.Vertex;
import graphalgorithms.GraphTools;
import java.awt.Color;
import java.awt.event.MouseEvent;
import Algorithms.Algorithm;

/**
 *
 * @author Student
 */
public class StartVertexPanel extends GraphPanel {

    /**
     * Creates new form StartVertexPanel
     */
    public StartVertexPanel(Algorithm alg) {
        initComponents();
        selectedAlgorithm = alg;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        submitButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        submitButton.setText("Submit");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Select start vertex");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(236, 236, 236)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(submitButton))
                .addContainerGap(274, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 508, Short.MAX_VALUE)
                .addComponent(submitButton)
                .addGap(36, 36, 36))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        
        if(evt.getButton() == MouseEvent.BUTTON1){
            for(int i=0;i<GraphTools.getGraph().numVertices();i++){

                Vertex j = GraphTools.getGraph().getVertex(i);

                if( (evt.getX() <= (j.getX()+ 2*Vertex.VERTEX_RADIUS)) && (evt.getX() >= j.getX()) && (evt.getY() <= (j.getY() + 2*Vertex.VERTEX_RADIUS)) && (evt.getY()>=j.getY())){
                    
                    if(selectedVertex != null && j != selectedVertex){
                        GraphTools.drawVertex(selectedVertex,Color.BLACK);
                    }
                    
                    if(j != selectedVertex){
                        selectedVertex = j;
                        GraphTools.drawVertex(j, Color.RED);
                        break;
                    }

                }
            }
        }
    }//GEN-LAST:event_formMouseClicked

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        if(selectedVertex==null){
            return; //ERROR - select start vertex
        } else {
            selectedAlgorithm.setStartVertex(selectedVertex);
            GraphTools.getFrame().setPanel(this, new GraphAlgPanel(selectedAlgorithm));
            GraphTools.drawGraph(GraphTools.getGraph());
            Thread t = new Thread(selectedAlgorithm);
            t.start();
        }
    }//GEN-LAST:event_submitButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton submitButton;
    // End of variables declaration//GEN-END:variables
    
    public void finish(){
        //check start vertex is valid for given algorithm
    }
    
    Vertex selectedVertex = null;
    Algorithm selectedAlgorithm;
    
}
