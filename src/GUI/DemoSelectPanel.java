/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import graphalgorithms.GraphTools;
import GraphPackage.*;

/**
 *
 * @author Student
 */
public class DemoSelectPanel extends javax.swing.JPanel {

    /**
     * Creates new form DemoSelectPanel
     */
    public DemoSelectPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        APPlanarDemo = new javax.swing.JButton();
        APNonPlanarDemo = new javax.swing.JButton();

        APPlanarDemo.setText("AP Planar Demo Graph");
        APPlanarDemo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                APPlanarDemoActionPerformed(evt);
            }
        });

        APNonPlanarDemo.setText("AP Non-Planar Demo Graph");
        APNonPlanarDemo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                APNonPlanarDemoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(234, 234, 234)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(APPlanarDemo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(APNonPlanarDemo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(203, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(169, 169, 169)
                .addComponent(APPlanarDemo)
                .addGap(26, 26, 26)
                .addComponent(APNonPlanarDemo)
                .addContainerGap(359, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void APPlanarDemoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_APPlanarDemoActionPerformed
        
        Vertex v1 = new Vertex(278,172);   //top vertex
        Vertex v2 = new Vertex(202,236);   //traversing anti clockwise around outer-most cycle
        Vertex v3 = new Vertex(243,341);
        Vertex v4 = new Vertex(334,340);
        Vertex v5 = new Vertex(359,232);
        Vertex v6 = new Vertex(280,234);   //top vertex of middle trio
        Vertex v7 = new Vertex(256,274);   //bottom left of trio
        Vertex v8 = new Vertex(305,273);   //bottom right of trio
        
        Edge e1 = new Edge(v1,v2);  //cycle edges
        Edge e2 = new Edge(v2,v3);
        Edge e3 = new Edge(v3,v4);
        Edge e4 = new Edge(v4,v5);
        Edge e5 = new Edge(v5,v1);
        
        Edge e11 = new Edge(v6,v1);  //Segment 2 edges
        Edge e12 = new Edge(v6,v2);
        Edge e13 = new Edge(v6,v5);
        
        Edge e21 = new Edge(v7,v3);  //segment 1 edges
        Edge e22 = new Edge(v7,v4);
        Edge e23 = new Edge(v7,v5);
        
        Edge e31 = new Edge(v8,v1);  //segment 3 edges
        Edge e32 = new Edge(v8,v2);
        Edge e33 = new Edge(v8,v4);
        
        Graph H = new Graph();
        
        H.addVertex(v1);
        H.addVertex(v2);
        H.addVertex(v3);
        H.addVertex(v4);
        H.addVertex(v5);
        H.addVertex(v7); //last 3 entered in irregular order to agree with dissertation segment numberings
        H.addVertex(v6);
        H.addVertex(v8);
        
        H.addEdge(e1);
        H.addEdge(e2);
        H.addEdge(e3);
        H.addEdge(e4);
        H.addEdge(e5);
        
        H.addEdge(e11);
        H.addEdge(e12);
        H.addEdge(e13);
        
        H.addEdge(e21);
        H.addEdge(e22);
        H.addEdge(e23);
        
        H.addEdge(e31);
        H.addEdge(e32);
        H.addEdge(e33);
        
        GraphTools.setGraph(H);
        
        GraphTools.getFrame().setPanel(this, new GraphDrawPanel());
        GraphTools.drawGraph(GraphTools.getGraph());
    }//GEN-LAST:event_APPlanarDemoActionPerformed

    private void APNonPlanarDemoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_APNonPlanarDemoActionPerformed
        
        Vertex v1 = new Vertex(254,352);   //Cycle vertices
        Vertex v2 = new Vertex(347,348);   
        Vertex v3 = new Vertex(394,279);
        Vertex v4 = new Vertex(343,218);
        Vertex v5 = new Vertex(247,223);
        Vertex v6 = new Vertex(194,280);
        
        Vertex v7 = new Vertex(318,273);  //segment 1 vertices
        Vertex v8 = new Vertex(272,275); 
        Vertex v9 = new Vertex(285,298); 
        Vertex v10 = new Vertex(312,298); 
        Vertex v11 = new Vertex(294,256); 
        
        Edge e1 = new Edge(v1,v2);  //cycle edges
        Edge e2 = new Edge(v2,v3);
        Edge e3 = new Edge(v3,v4);
        Edge e4 = new Edge(v4,v5);
        Edge e5 = new Edge(v5,v6);
        Edge e6 = new Edge(v6,v1);
        Edge e7 = new Edge(v1,v7);
        Edge e8 = new Edge(v7,v8);
        Edge e9 = new Edge(v8,v9);
        Edge e10 = new Edge(v9,v10);
        Edge e11 = new Edge(v10,v3);
        Edge e12 = new Edge(v8,v11);
        Edge e13 = new Edge(v11,v9);
        Edge e14 = new Edge(v7,v4);
        Edge e15 = new Edge(v6,v8);
        Edge e16 = new Edge(v3,v5);
        
        Graph H = new Graph();
        
        H.addVertex(v1);
        H.addVertex(v2);
        H.addVertex(v3);
        H.addVertex(v4);
        H.addVertex(v5);
        H.addVertex(v6);
        H.addVertex(v7);
        H.addVertex(v8);
        H.addVertex(v9);
        H.addVertex(v10);
        H.addVertex(v11);
        
        H.addEdge(e1);
        H.addEdge(e2);
        H.addEdge(e3);
        H.addEdge(e4);
        H.addEdge(e5);
        H.addEdge(e6);
        H.addEdge(e7);
        H.addEdge(e8);
        H.addEdge(e9);
        H.addEdge(e10);
        H.addEdge(e11);
        H.addEdge(e12);
        H.addEdge(e13);
        H.addEdge(e14);
        H.addEdge(e15);
        H.addEdge(e16);
        
        
        GraphTools.setGraph(H);
        
        GraphTools.getFrame().setPanel(this, new GraphDrawPanel());
        GraphTools.drawGraph(GraphTools.getGraph());
    }//GEN-LAST:event_APNonPlanarDemoActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton APNonPlanarDemo;
    private javax.swing.JButton APPlanarDemo;
    // End of variables declaration//GEN-END:variables
}
